/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>


&mt {
    flavor = "balanced";
    tapping_term_ms = <300>;
};

/ {

    behaviors {
      hm: homerow_mods {
        compatible = "zmk,behavior-hold-tap";
        label = "HOMEROW_MODS";
        #binding-cells = <2>;
        tapping-term-ms = <300>;
        quick_tap_ms = <0>;
        flavor = "balanced";
        bindings = <&kp>, <&kp>;
      };
    };

        keymap {
                compatible = "zmk,keymap";

       		default_layer {
		bindings = <
		&kp Q          &kp W       &kp E            &kp R             &kp T         &kp Y      &kp U      &kp I        &kp O        &kp P
		&hm LGUI A     &hm LALT S  &hm LSHFT D      &hm LCTRL F       &kp G         &kp H      &hm RCTRL J &hm RSHFT K  &hm RALT L   &hm RGUI BSPC
		&kp Z          &kp X       &kp C            &kp V             &kp B         &kp N      &kp M      &kp COMMA     &kp DOT      &kp SLASH
          				                            &mo 3             &kp SPACE     &kp ENTER  &mo 4
		>;
		};

		      colemak {
		bindings = <
		&kp Q         &kp W        &kp F            &kp P            &kp G  	    &kp J       &kp L         &kp U       &kp Y       &kp BSPC
		&hm LGUI A    &hm LALT R   &hm LSHFT S      &hm LCTRL T      &kp D          &kp H       &hm RCTRL N    &hm RSHFT E &hm RALT I  &hm RGUI O
		&kp Z         &kp X        &kp C            &kp V            &kp B          &kp K       &kp M         &kp COMMA    &kp DOT     &kp SLASH
		                                            &trans           &trans  		&trans      &trans
		>;
		};

		      gaming {
		bindings = <
    	&kp TAB        &kp Q       &kp W            &kp E           &kp R       	&kp Y		&kp U      &kp I        &kp O        &kp P
		&kp LSHFT      &kp A       &kp S            &kp D           &kp F       	&kp H		&kp J      &kp K        &kp L        &kp BSPC
		&kp LCTRL       &kp Z       &kp X            &kp C          &kp V       	&kp N		&kp M      &kp COMMA     &kp DOT     &kp SLASH
		                                            &trans			&trans			&trans		&trans
		>;
		};

       		left_layer {
		bindings = <
		&kp N1        &kp N2       &kp N3           &kp N4			&kp N5  	    &kp N6      &kp N7        &kp N8     &kp N9      &kp N0
		&kp LGUI      &kp LALT     &hm LSHFT UNDER  &kp LCTRL       &kp ESC  	 	&none       &kp RCTRL     &kp RSHFT  &kp RALT    &kp RGUI
		&kp KC_NUBS   &kp DEL      &kp TAB          &kp GRAVE       &kp K_APP      	&kp HOME    &kp END       &none      &none       &kp ACUTE_ACCENT
					                                      &trans    &trans  		&trans      &mo 5
		>;
		};

		      right_layer {
		bindings = <
		&kp F1        &kp F2        &kp F3          &kp F4           &kp F5     		&kp F6      &kp F7        &kp F8     &kp F9     &kp F10
		&kp LGUI      &kp LALT      &kp LSHFT       &kp LCTRL        &kp BSLH    		&kp BSLH    &kp LEFT      &kp DOWN   &kp UP     &kp RIGHT
    	&kp F11       &kp F12       &none           &none            &none      		&none       &kp SEMI      &kp SQT    &kp LBKT   &kp BACKSLASH
				                                    &mo 5            &trans  			&trans      &trans
		>;
		};

		      tri_layer {
		bindings = <
		&none         &none         &none           &none           &kp KP_COMMA		&kp KP_MULTIPLY &kp KP_N7  &kp KP_N8 &kp KP_N9   &kp KP_PLUS
		&to 0         &to 1         &to 2           &none           &kp K_VOL_UP		&kp KP_DIVIDE   &kp KP_N4  &kp KP_N5 &kp KP_N6   &kp KP_MINUS
		&bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2    &bt BT_CLR      &kp K_VOL_DN		&kp KP_N0       &kp KP_N1  &kp KP_N2 &kp KP_N3   &kp KP_DOT
					                            	&trans			&trans  			&trans          &trans
		>;
		};

	};
};